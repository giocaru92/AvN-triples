(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     27472,        753]
NotebookOptionsPosition[     27029,        732]
NotebookOutlinePosition[     27383,        748]
CellTagsIndexPosition[     27340,        745]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"CONDITION", " ", "1"}], " ", "-", " ", 
    RowBox[{"FULL", " ", "RANK"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"condition1", "[", "x_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixRank", "[", "x", "]"}], "\[Equal]", "3"}], ",", 
      RowBox[{"Return", "[", "True", "]"}], ",", 
      RowBox[{"Return", "[", "False", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"CONDITION", " ", "2"}], " ", "-", " ", 
     RowBox[{"FOR", " ", "EACH", " ", "COLUMN", " ", "j"}]}], ",", " ", 
    RowBox[{"AT", " ", "LEAST", " ", "TWO", " ", "OF", " ", "e_j"}], ",", " ",
     "f_j", ",", " ", 
    RowBox[{"g_i", " ", "are", " ", "equal"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "function", " ", "for", " ", "a", " ", "single", " ", 
    RowBox[{"column", ":", " ", 
     RowBox[{
     "returns", " ", "True", " ", "if", " ", "at", " ", "least", " ", "two", 
      " ", "elements", " ", "of", " ", "the", " ", "column", " ", "j", " ", 
      "are", " ", "equal", " ", "and", " ", "False", " ", "if", " ", "they", 
      " ", "are", " ", "all", " ", "diferent"}]}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cond2", "[", 
     RowBox[{"x_", ",", "j_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"n", "+", "j"}], "]"}], "]"}]}], "}"}], "\[NotEqual]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"n", "+", "j"}], "]"}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "&&", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"n", "+", "j"}], "]"}], "]"}]}], "}"}], "\[NotEqual]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"n", "+", "j"}], "]"}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "&&", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"n", "+", "j"}], "]"}], "]"}]}], "}"}], "\[NotEqual]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"n", "+", "j"}], "]"}], "]"}]}], "}"}]}]}], ",", 
      RowBox[{"Return", "[", "False", "]"}], ",", 
      RowBox[{"Return", "[", "True", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "function", " ", "for", " ", "all", " ", "columns"}],
    "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"condition2", "[", "x_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "k", "}"}], ",", 
      RowBox[{
       RowBox[{"k", "=", "0"}], ";", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "n"}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"cond2", "[", 
               RowBox[{"x", ",", "i"}], "]"}]}], ",", 
             RowBox[{"k", "++"}]}], "]"}]}], "]"}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"k", ">", "0"}], ",", 
           RowBox[{"Return", "[", "False", "]"}], ",", 
           RowBox[{"Return", "[", "True", "]"}]}], "]"}]}], ")"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"CONDITION", " ", "3"}], ":", " ", 
     RowBox[{
     "THE", " ", "NUMBER", " ", "OF", " ", "CASES", " ", "WHERE", " ", 
      "e_i"}]}], " ", "=", " ", 
    RowBox[{"g_i", " ", "\[NotEqual]", " ", 
     RowBox[{"f_i", " ", "IS", " ", "ODD"}]}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"condition3", "[", "x_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "k", "}"}], ",", 
      RowBox[{
       RowBox[{"k", "=", "0"}], ";", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "n"}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "i"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "i"}], "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"n", "+", "i"}]}], "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"n", "+", "i"}]}], "]"}], "]"}], "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "i"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "i"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "||", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"n", "+", "i"}]}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"n", "+", "i"}]}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], " ", "&&", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "i"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", "0"}], "||", 
                
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"n", "+", "i"}]}], "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", "0"}]}], 
               ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "i"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}], " ", "||", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"n", "+", "i"}]}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", "0"}]}], 
               ")"}]}], ",", 
             RowBox[{"k", "++"}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"k", ",", "2"}], "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"Return", "[", "True", "]"}], ",", 
           RowBox[{"Return", "[", "False", "]"}]}], "]"}]}], ")"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"CONDITION", " ", "4"}], ":", " ", 
    RowBox[{"PAIRWISE", " ", "COMMUTATIVITY"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"define", " ", "matrix", " ", 
    RowBox[{"lambda_n", "."}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lambdan", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lambdan", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "1", ",", 
        " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
        " ", "1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
        "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
        "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"condition4", "[", "x_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ".", "lambdan", ".", 
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "2"}], "]"}], "\[Equal]", 
        "0"}], "&&", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ".", "lambdan", ".", 
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", "2"}], "]"}], "\[Equal]", 
        "0"}], "&&", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ".", "lambdan", ".", 
           RowBox[{"x", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", "2"}], "]"}], "\[Equal]", 
        "0"}]}], ",", 
      RowBox[{"Return", "[", "True", "]"}], ",", 
      RowBox[{"Return", "[", "False", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "GENERATE", " ", "ALL", " ", "POSSIBLE", " ", "TRIPLES", " ", "AS", " ", 
    "3", "x", 
    RowBox[{"(", 
     RowBox[{"2", "*", "n"}], ")"}], " ", "BINARY", " ", "MATRICES"}], "*)"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"triples", "=", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", 
        RowBox[{"2", "*", "n"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"SELECT", " ", "ALL", " ", "AvN", " ", "Triples"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"avntriple", "[", "x_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"condition1", "[", "x", "]"}], " ", "&&", " ", 
       RowBox[{"condition2", "[", "x", "]"}], " ", "&&", " ", 
       RowBox[{"condition3", "[", "x", "]"}], " ", "&&", " ", 
       RowBox[{"condition4", "[", "x", "]"}]}], ",", " ", 
      RowBox[{"Return", " ", "[", "True", "]"}], ",", " ", 
      RowBox[{"Return", "[", "False", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avn", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"triples", ",", " ", "avntriple"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "avn", "]"}]}], "Input",
 CellChangeTimes->{{3.6665528021417933`*^9, 3.6665528063065357`*^9}}],

Cell[BoxData["114048"], "Output",
 CellChangeTimes->{3.666538704963719*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["avn"], "Input",
 CellChangeTimes->{{3.666538755721119*^9, 3.666538756259334*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
                ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0",
                ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1",
                ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
                ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0",
                ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0",
                ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
                ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0",
                ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
                ",", "0"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"114043"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1",
                ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0",
                ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
                ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1",
                ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0",
                ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
                ",", "0"}], "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 72, 15367573439754619399, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 72, 15367573439754619399, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 72, 15367573439754619399, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[72]]], "Output",
 CellChangeTimes->{3.666538769846821*^9}]
}, Open  ]]
},
WindowSize->{808, 706},
WindowMargins->{{163, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 15716, 426, 1134, "Input"],
Cell[16299, 450, 75, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16411, 456, 95, 1, 28, "Input"],
Cell[16509, 459, 10504, 270, 176, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
